{"version":3,"sources":["data/getData.js","components/Users.js","components/Comment.js","components/CommentList.js","components/Posts.js","components/PostList.js","App.js","index.js"],"names":["getData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","getUsers","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","Users","users","react_default","createElement","className","name","email","address","city","Comment","currentComment","body","CommentList","state","on","getLoad","_this","setState","prevState","result","props","currentComments","map","comment","components_Comment","type","onClick","React","Component","Posts","posts","id","title","components_Users","user","components_CommentList","comments","PostList","currentPosts","post","components_Posts","key","App","isLoaded","isLoading","load","objectSpread","find","userId","filter","postId","handleSearch","event","search","target","value","text","join","toLowerCase","includes","placeholder","onChange","components_PostList","disabled","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.7ee1d267.chunk.js","sourcesContent":["const getData = async(url) => {\n  const response = await fetch(url);\n  const getUsers = await response.json();\n\n  return getUsers;\n};\n\nexport default getData;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Users({ users }) {\n  return (\n    <div className=\"users alert-success\">\n      <p className=\"users__text\">\n         name:\n        {users.name}\n      </p>\n      <p className=\"users__text\">\n        email:\n        {users.email}\n      </p>\n      <p className=\"users__text\">\n        city:\n        {users.address.city}\n      </p>\n    </div>\n  );\n}\n\nUsers.propTypes = {\n  users: PropTypes.shape({\n  }).isRequired,\n};\n\nexport default Users;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Comment({ currentComment }) {\n  return (\n    <div className=\"comment\">\n      <span className=\"comment__name\">{currentComment.name}</span>\n      <span className=\"comment__email\">{currentComment.email}</span>\n      <p className=\"comment__body\">{currentComment.body}</p>\n    </div>\n  );\n}\n\nComment.propTypes = {\n  currentComment: PropTypes.shape({\n  }).isRequired,\n};\n\nexport default Comment;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Comment from './Comment';\n\nclass CommentList extends React.Component {\n  state = {\n    on: false,\n  };\n\n  getLoad = () => {\n    this.setState(prevState => ({\n      on: !prevState.on,\n    }));\n  };\n\n  render() {\n    const { currentComments } = this.props;\n    const result = currentComments.map(comment => (\n      <Comment currentComment={comment} />\n    ));\n\n    return (\n      <div>\n        {this.state.on && result}\n\n        <button\n          type=\"submit\"\n          className=\"btn btn-success mt-2 mb-2\"\n          onClick={this.getLoad}\n        >\n          {this.state.on ? 'Hide' : 'Show' }\n        </button>\n      </div>\n    );\n  }\n}\n\nCommentList.propTypes = {\n  currentComments: PropTypes.shape({\n    post: PropTypes.string.isRequired,\n  }).isRequired,\n};\n\nexport default CommentList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Users from './Users';\nimport CommentList from './CommentList';\n\nfunction Posts({ posts }) {\n  return (\n    <div className=\"posts\">\n      <p className=\"posts__title alert alert-warning\">\n        News\n        {posts.id}\n        <br />\n        {posts.title}\n      </p>\n      <p className=\"posts__body alert alert-info\">\n        About news\n        {posts.id}\n        <br />\n        {posts.body}\n      </p>\n      <Users users={posts.user} />\n      <p>Comments</p>\n      <CommentList currentComments={posts.comments} />\n    </div>\n  );\n}\n\nPosts.propTypes = {\n  posts: PropTypes.shape({\n    title: PropTypes.string.isRequired,\n    body: PropTypes.string.isRequired,\n    user: PropTypes.string.isRequired,\n    comments: PropTypes.string.isRequired,\n  }).isRequired,\n};\nexport default Posts;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Posts from './Posts';\n\nfunction PostList({ currentPosts }) {\n  return (\n    <div>\n      {currentPosts.map(post => (\n        <Posts\n          key={post.id}\n          posts={post}\n        />\n      ))}\n    </div>\n  );\n}\n\nPostList.propTypes = {\n  currentPosts: PropTypes.arrayOf(PropTypes.object).isRequired,\n};\nexport default PostList;\n","import React from 'react';\nimport getData from './data/getData';\nimport './App.css';\nimport PostList from './components/PostList';\n\nclass App extends React.Component {\n  state = {\n    users: [],\n    isLoaded: false,\n    isLoading: false,\n  };\n\n  load = async() => {\n    this.setState({\n      isLoading: true,\n    });\n    const users = await getData('https://jsonplaceholder.typicode.com/users');\n    const posts = await getData('https://jsonplaceholder.typicode.com/posts');\n    const comments = await\n    getData('https://jsonplaceholder.typicode.com/comments');\n    const result = posts.map(post => ({\n      ...post,\n      user: users.find(user => user.id === post.userId),\n      comments: comments.filter(comment => comment.postId === post.id),\n    }));\n\n    this.setState({\n      users: result,\n      isLoaded: true,\n      isLoading: false,\n      post: result,\n    });\n  };\n\n  handleSearch = (event) => {\n    const search = event.target.value;\n\n    this.setState(prevState => ({\n      users: prevState.post.filter(\n        text => [text.title || text.body]\n          .join('').toLowerCase().includes(search.toLowerCase())\n      ),\n    }));\n  };\n\n  render() {\n    const { users } = this.state;\n\n    if (!this.state.isLoaded) {\n      return (\n        <div className=\"text-center\">\n          <button\n            type=\"submit\"\n            className=\"btn btn-success mt-5\"\n            onClick={this.load}\n            disabled={this.state.isLoading}\n          >\n            {this.state.isLoading ? 'Loading...' : 'Load posts' }\n          </button>\n        </div>\n      );\n    }\n\n    return (\n      <div className=\"container\">\n        <h1\n          className=\"alert alert-primary text-center\"\n        >\n          Dynamic list of posts\n        </h1>\n        <form className=\"form-horizontal\">\n          <input\n            placeholder=\"filter by title and the text...\"\n            onChange={this.handleSearch}\n            className=\"form-control mb-4\"\n          />\n        </form>\n        <PostList currentPosts={users} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}